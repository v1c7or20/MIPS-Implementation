$date
	Fri Jun 26 00:14:45 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module flopenr $end
$var wire 1 ! clk $end
$var wire 8 " d [7:0] $end
$var wire 1 # en $end
$var wire 1 $ reset $end
$var reg 8 % q [7:0] $end
$upscope $end
$scope module testbench $end
$var wire 32 & writedata [31:0] $end
$var wire 1 ' memwrite $end
$var wire 32 ( dataadr [31:0] $end
$var reg 1 ) clk $end
$var reg 1 * reset $end
$scope module dut $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 32 + writedata [31:0] $end
$var wire 32 , readdata [31:0] $end
$var wire 32 - pc [31:0] $end
$var wire 1 ' memwrite $end
$var wire 32 . instr [31:0] $end
$var wire 32 / dataadr [31:0] $end
$scope module dmem $end
$var wire 1 ) clk $end
$var wire 32 0 rd [31:0] $end
$var wire 1 ' we $end
$var wire 32 1 wd [31:0] $end
$var wire 32 2 a [31:0] $end
$upscope $end
$scope module imem $end
$var wire 6 3 a [5:0] $end
$var wire 32 4 rd [31:0] $end
$upscope $end
$scope module mips $end
$var wire 1 ) clk $end
$var wire 32 5 instr [31:0] $end
$var wire 32 6 readdata [31:0] $end
$var wire 1 * reset $end
$var wire 1 7 zero $end
$var wire 32 8 writedata [31:0] $end
$var wire 1 9 regwrite $end
$var wire 1 : regdst $end
$var wire 1 ; pcsrc $end
$var wire 32 < pc [31:0] $end
$var wire 1 ' memwrite $end
$var wire 1 = memtoreg $end
$var wire 1 > jump $end
$var wire 1 ? alusrc $end
$var wire 32 @ aluout [31:0] $end
$var wire 4 A alucontrol [3:0] $end
$scope module c $end
$var wire 6 B funct [5:0] $end
$var wire 6 C op [5:0] $end
$var wire 1 ; pcsrc $end
$var wire 1 7 zero $end
$var wire 1 9 regwrite $end
$var wire 1 : regdst $end
$var wire 1 ' memwrite $end
$var wire 1 = memtoreg $end
$var wire 1 > jump $end
$var wire 1 D branch $end
$var wire 1 ? alusrc $end
$var wire 2 E aluop [1:0] $end
$var wire 4 F alucontrol [3:0] $end
$scope module ad $end
$var wire 6 G funct [5:0] $end
$var wire 2 H aluop [1:0] $end
$var reg 4 I alucontrol [3:0] $end
$upscope $end
$scope module md $end
$var wire 6 J op [5:0] $end
$var wire 1 9 regwrite $end
$var wire 1 : regdst $end
$var wire 1 ' memwrite $end
$var wire 1 = memtoreg $end
$var wire 1 > jump $end
$var wire 1 D branch $end
$var wire 1 ? alusrc $end
$var wire 2 K aluop [1:0] $end
$var reg 9 L controls [8:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 4 M alucontrol [3:0] $end
$var wire 1 ? alusrc $end
$var wire 1 ) clk $end
$var wire 32 N instr [31:0] $end
$var wire 1 > jump $end
$var wire 1 = memtoreg $end
$var wire 1 ; pcsrc $end
$var wire 32 O readdata [31:0] $end
$var wire 1 : regdst $end
$var wire 1 9 regwrite $end
$var wire 1 * reset $end
$var wire 1 7 zero $end
$var wire 5 P writereg [4:0] $end
$var wire 32 Q writedata [31:0] $end
$var wire 32 R srcb [31:0] $end
$var wire 32 S srca [31:0] $end
$var wire 32 T signimmsh [31:0] $end
$var wire 32 U signimm [31:0] $end
$var wire 32 V result [31:0] $end
$var wire 32 W pcplus4 [31:0] $end
$var wire 32 X pcnextbr [31:0] $end
$var wire 32 Y pcnext [31:0] $end
$var wire 32 Z pcbranch [31:0] $end
$var wire 32 [ pc [31:0] $end
$var wire 32 \ aluout [31:0] $end
$scope module alu $end
$var wire 4 ] aluOp [3:0] $end
$var wire 32 ^ result_logic [31:0] $end
$var wire 32 _ result_arithmetic [31:0] $end
$var wire 32 ` B [31:0] $end
$var wire 32 a A [31:0] $end
$var reg 32 b Result [31:0] $end
$var reg 1 7 Zero $end
$scope module AritmeticalPart $end
$var wire 4 c aluOp [3:0] $end
$var wire 32 d B [31:0] $end
$var wire 32 e A [31:0] $end
$var reg 32 f Result [31:0] $end
$upscope $end
$scope module LogicalPart $end
$var wire 4 g aluOp [3:0] $end
$var wire 32 h B [31:0] $end
$var wire 32 i A [31:0] $end
$var reg 32 j Result [31:0] $end
$upscope $end
$upscope $end
$scope module immsh $end
$var wire 32 k y [31:0] $end
$var wire 32 l a [31:0] $end
$upscope $end
$scope module pcadd1 $end
$var wire 32 m b [31:0] $end
$var wire 32 n y [31:0] $end
$var wire 32 o a [31:0] $end
$upscope $end
$scope module pcadd2 $end
$var wire 32 p a [31:0] $end
$var wire 32 q b [31:0] $end
$var wire 32 r y [31:0] $end
$upscope $end
$scope module pcbrmux $end
$var wire 32 s d0 [31:0] $end
$var wire 32 t d1 [31:0] $end
$var wire 1 ; s $end
$var wire 32 u y [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 v d0 [31:0] $end
$var wire 32 w d1 [31:0] $end
$var wire 1 > s $end
$var wire 32 x y [31:0] $end
$upscope $end
$scope module pcreg $end
$var wire 1 ) clk $end
$var wire 32 y d [31:0] $end
$var wire 1 * reset $end
$var reg 32 z q [31:0] $end
$upscope $end
$scope module resmux $end
$var wire 32 { d0 [31:0] $end
$var wire 32 | d1 [31:0] $end
$var wire 1 = s $end
$var wire 32 } y [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ) clk $end
$var wire 5 ~ ra1 [4:0] $end
$var wire 5 !" ra2 [4:0] $end
$var wire 32 "" wd3 [31:0] $end
$var wire 1 9 we3 $end
$var wire 5 #" wa3 [4:0] $end
$var wire 32 $" rd2 [31:0] $end
$var wire 32 %" rd1 [31:0] $end
$upscope $end
$scope module se $end
$var wire 16 &" a [15:0] $end
$var wire 1 ? alusrc $end
$var wire 4 '" instr [3:0] $end
$var reg 32 (" y [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 )" d0 [31:0] $end
$var wire 32 *" d1 [31:0] $end
$var wire 1 ? s $end
$var wire 32 +" y [31:0] $end
$upscope $end
$scope module wrmux $end
$var wire 5 ," d0 [4:0] $end
$var wire 5 -" d1 [4:0] $end
$var wire 1 : s $end
$var wire 5 ." y [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 ."
b10000 -"
b1000 ,"
b1000000000000000 +"
b1000000000000000 *"
bx )"
b1000000000000000 ("
b101 '"
b1000000000000000 &"
b0 %"
bx $"
b1000 #"
b1000000000000000 ""
b1000 !"
b0 ~
b1000000000000000 }
bx |
b1000000000000000 {
b0 z
b100 y
b100 x
b1000100000000000000000 w
b100 v
b100 u
b100000000000000100 t
b100 s
b100000000000000100 r
b100000000000000000 q
b100 p
b0 o
b100 n
b100 m
b1000000000000000 l
b100000000000000000 k
b1000000000000000 j
b0 i
b1000000000000000 h
b101 g
b1000000000000000 f
b0 e
b1000000000000000 d
b101 c
b1000000000000000 b
b0 a
b1000000000000000 `
b1000000000000000 _
b1000000000000000 ^
b101 ]
b1000000000000000 \
b0 [
b100000000000000100 Z
b100 Y
b100 X
b100 W
b1000000000000000 V
b1000000000000000 U
b100000000000000000 T
b0 S
b1000000000000000 R
bx Q
b1000 P
bx O
b110100000010001000000000000000 N
b101 M
b101000011 L
b11 K
b1101 J
b101 I
b11 H
b0 G
b101 F
b11 E
0D
b1101 C
b0 B
b101 A
b1000000000000000 @
1?
0>
0=
b0 <
0;
0:
19
bx 8
07
bx 6
b110100000010001000000000000000 5
b110100000010001000000000000000 4
b0 3
b1000000000000000 2
bx 1
bx 0
b1000000000000000 /
b110100000010001000000000000000 .
b0 -
bx ,
bx +
1*
1)
b1000000000000000 (
0'
bx &
bx %
z$
z#
bz "
z!
$end
#5
0)
#10
b1000000000000000 &
b1000000000000000 +
b1000000000000000 1
b1000000000000000 8
b1000000000000000 Q
b1000000000000000 $"
b1000000000000000 )"
1)
#15
0)
#20
1)
#22
0*
#25
0)
#30
b11111111111111111000000000000000 V
b11111111111111111000000000000000 }
b11111111111111111000000000000000 ""
b11111111111111111000000000000000 (
b11111111111111111000000000000000 /
b11111111111111111000000000000000 2
b11111111111111111000000000000000 @
b11111111111111111000000000000000 \
b11111111111111111000000000000000 b
b11111111111111111000000000000000 {
b11111111111111111000000000000000 _
b11111111111111111000000000000000 f
b11111111111111111000000000000000 R
b11111111111111111000000000000000 `
b11111111111111111000000000000000 d
b11111111111111111000000000000000 h
b11111111111111111000000000000000 +"
b11111111111111100000000000000000 T
b11111111111111100000000000000000 k
b11111111111111100000000000000000 q
b11111111111111111000000000000000 U
b11111111111111111000000000000000 l
b11111111111111111000000000000000 ("
b11111111111111111000000000000000 *"
b0 A
b0 F
b0 I
b0 M
b0 ]
b0 c
b0 g
b0 '"
b0 E
b0 H
b0 K
b101000000 L
bx &
bx +
bx 1
bx 8
bx Q
bx $"
bx )"
b1001 P
b1001 #"
b1001 ."
b1000 Y
b1000 x
b1000 y
b1000 C
b1000 J
b1001100000000000000000 w
b1001 !"
b1001 ,"
b1000 X
b1000 u
b1000 v
b100000000010011000000000000000 .
b100000000010011000000000000000 4
b100000000010011000000000000000 5
b100000000010011000000000000000 N
b1 3
b11111111111111100000000000001000 Z
b11111111111111100000000000001000 r
b11111111111111100000000000001000 t
b1000 W
b1000 n
b1000 p
b1000 s
b100 -
b100 <
b100 [
b100 o
b100 z
1)
#35
0)
#40
b1000000000000001 ^
b1000000000000001 j
b101 A
b101 F
b101 I
b101 M
b101 ]
b101 c
b101 g
b101 '"
b11 E
b11 H
b11 K
b101000011 L
b1000000000000001 V
b1000000000000001 }
b1000000000000001 ""
b1000000000000001 (
b1000000000000001 /
b1000000000000001 2
b1000000000000001 @
b1000000000000001 \
b1000000000000001 b
b1000000000000001 {
b10000000000000001 _
b10000000000000001 f
b1000000000000001 R
b1000000000000001 `
b1000000000000001 d
b1000000000000001 h
b1000000000000001 +"
b100000000000000100 T
b100000000000000100 k
b100000000000000100 q
b1000000000000000 S
b1000000000000000 a
b1000000000000000 e
b1000000000000000 i
b1000000000000000 %"
b1010 P
b1010 #"
b1010 ."
b1000000000000001 U
b1000000000000001 l
b1000000000000001 ("
b1000000000000001 *"
b1100 Y
b1100 x
b1100 y
b1101 C
b1101 J
b1 B
b1 G
b100001010100000000000000100 w
b1000 ~
b1010 !"
b1010 ,"
b1000000000000001 &"
bx &
bx +
bx 1
bx 8
bx Q
bx $"
bx )"
b1100 X
b1100 u
b1100 v
b110101000010101000000000000001 .
b110101000010101000000000000001 4
b110101000010101000000000000001 5
b110101000010101000000000000001 N
b10 3
b100000000000010000 Z
b100000000000010000 r
b100000000000010000 t
b1100 W
b1100 n
b1100 p
b1100 s
b1000 -
b1000 <
b1000 [
b1000 o
b1000 z
1)
#45
0)
#50
b10 A
b10 F
b10 I
b10 M
b10 ]
b10 c
b10 g
b10 '"
09
0?
1D
b1 E
b1 H
b1 K
b100001 L
b10000000000000000 V
b10000000000000000 }
b10000000000000000 ""
b10000000000000000 (
b10000000000000000 /
b10000000000000000 2
b10000000000000000 @
b10000000000000000 \
b10000000000000000 b
b10000000000000000 {
b10000000000000000 _
b10000000000000000 f
b11111111111111111000000000000000 ^
b11111111111111111000000000000000 j
b11111111111111111000000000000000 R
b11111111111111111000000000000000 `
b11111111111111111000000000000000 d
b11111111111111111000000000000000 h
b11111111111111111000000000000000 +"
b10100 T
b10100 k
b10100 q
b1001 P
b1001 #"
b1001 ."
b101 U
b101 l
b101 ("
b101 *"
b10000 Y
b10000 x
b10000 y
b100 C
b100 J
b101 B
b101 G
b100001001000000000000010100 w
b1001 !"
b1001 ,"
b0 -"
b101 &"
b11111111111111111000000000000000 &
b11111111111111111000000000000000 +
b11111111111111111000000000000000 1
b11111111111111111000000000000000 8
b11111111111111111000000000000000 Q
b11111111111111111000000000000000 $"
b11111111111111111000000000000000 )"
b10000 X
b10000 u
b10000 v
b10001000010010000000000000101 .
b10001000010010000000000000101 4
b10001000010010000000000000101 5
b10001000010010000000000000101 N
b11 3
b100100 Z
b100100 r
b100100 t
b10000 W
b10000 n
b10000 p
b10000 s
b1100 -
b1100 <
b1100 [
b1100 o
b1100 z
1)
#55
0)
#60
17
b1010 A
b1010 F
b1010 I
b1010 M
b1010 ]
b1010 c
b1010 g
b1010 '"
19
1:
0D
b10 E
b10 H
b10 K
b110000010 L
b0 V
b0 }
b0 ""
b0 (
b0 /
b0 2
b0 @
b0 \
b0 b
b0 {
b0 _
b0 f
b1000000000000000 R
b1000000000000000 `
b1000000000000000 d
b1000000000000000 h
b1000000000000000 +"
b10110000010101000 T
b10110000010101000 k
b10110000010101000 q
b11111111111111111000000000000000 S
b11111111111111111000000000000000 a
b11111111111111111000000000000000 e
b11111111111111111000000000000000 i
b11111111111111111000000000000000 %"
b1000000000000000 &
b1000000000000000 +
b1000000000000000 1
b1000000000000000 8
b1000000000000000 Q
b1000000000000000 $"
b1000000000000000 )"
b1011 P
b1011 #"
b1011 ."
b101100000101010 U
b101100000101010 l
b101100000101010 ("
b101100000101010 *"
b10100 Y
b10100 x
b10100 y
b0 C
b0 J
b101010 B
b101010 G
b100101000010110000010101000 w
b1001 ~
b1000 !"
b1000 ,"
b1011 -"
b101100000101010 &"
b10100 X
b10100 u
b10100 v
b1001010000101100000101010 .
b1001010000101100000101010 4
b1001010000101100000101010 5
b1001010000101100000101010 N
b100 3
b10110000010111100 Z
b10110000010111100 r
b10110000010111100 t
b10100 W
b10100 n
b10100 p
b10100 s
b10000 -
b10000 <
b10000 [
b10000 o
b10000 z
1)
#65
0)
#70
1;
09
0:
1D
b100010 L
bx A
bx F
bx I
bx M
bx ]
bx c
bx g
bx '"
b0 R
b0 `
b0 d
b0 h
b0 +"
b100 T
b100 k
b100 q
b0 S
b0 a
b0 e
b0 i
b0 %"
b0 &
b0 +
b0 1
b0 8
b0 Q
b0 $"
b0 )"
b0 P
b0 #"
b0 ."
b1 U
b1 l
b1 ("
b1 *"
b11100 Y
b11100 x
b11100 y
b101 C
b101 J
b1 B
b1 G
b101100000000000000000000100 w
b1011 ~
b0 !"
b0 ,"
b0 -"
b1 &"
b11100 X
b11100 u
b11100 v
b10101011000000000000000000001 .
b10101011000000000000000000001 4
b10101011000000000000000000001 5
b10101011000000000000000000001 N
b101 3
b11100 Z
b11100 r
b11100 t
b11000 W
b11000 n
b11000 p
b11000 s
b10100 -
b10100 <
b10100 [
b10100 o
b10100 z
1)
#75
0)
#80
0;
b1 V
b1 }
b1 ""
19
1:
0D
07
b1 (
b1 /
b1 2
b1 @
b1 \
b1 b
b1 {
b110000010 L
b10 A
b10 F
b10 I
b10 M
b10 ]
b10 c
b10 g
b10 '"
b1 _
b1 f
b1000000000000000 R
b1000000000000000 `
b1000000000000000 d
b1000000000000000 h
b1000000000000000 +"
b10100000010001000 T
b10100000010001000 k
b10100000010001000 q
b1000000000000001 S
b1000000000000001 a
b1000000000000001 e
b1000000000000001 i
b1000000000000001 %"
b1000000000000000 &
b1000000000000000 +
b1000000000000000 1
b1000000000000000 8
b1000000000000000 Q
b1000000000000000 $"
b1000000000000000 )"
b1010 P
b1010 #"
b1010 ."
b101000000100010 U
b101000000100010 l
b101000000100010 ("
b101000000100010 *"
b100000 Y
b100000 x
b100000 y
b0 C
b0 J
b100010 B
b100010 G
b101001000010100000010001000 w
b1010 ~
b1000 !"
b1000 ,"
b1010 -"
b101000000100010 &"
b100000 X
b100000 u
b100000 v
b1010010000101000000100010 .
b1010010000101000000100010 4
b1010010000101000000100010 5
b1010010000101000000100010 N
b111 3
b10100000010101000 Z
b10100000010101000 r
b10100000010101000 t
b100000 W
b100000 n
b100000 p
b100000 s
b11100 -
b11100 <
b11100 [
b11100 o
b11100 z
1)
#85
0)
#90
b1000000011111111 ^
b1000000011111111 j
b11111111 R
b11111111 `
b11111111 d
b11111111 h
b11111111 +"
0:
1?
b11 E
b11 H
b11 K
b101000011 L
b101 A
b101 F
b101 I
b101 M
b101 ]
b101 c
b101 g
b101 '"
07
b1000000011111111 V
b1000000011111111 }
b1000000011111111 ""
b1111111100 T
b1111111100 k
b1111111100 q
b1000000011111111 (
b1000000011111111 /
b1000000011111111 2
b1000000011111111 @
b1000000011111111 \
b1000000011111111 b
b1000000011111111 {
b1000 P
b1000 #"
b1000 ."
b11111111 U
b11111111 l
b11111111 ("
b11111111 *"
b1000000011111111 _
b1000000011111111 f
b100100 Y
b100100 x
b100100 y
b1101 C
b1101 J
b111111 B
b111111 G
b100001000000000001111111100 w
b1000 ~
b0 -"
b11111111 &"
b1000000000000000 S
b1000000000000000 a
b1000000000000000 e
b1000000000000000 i
b1000000000000000 %"
b100100 X
b100100 u
b100100 v
b110101000010000000000011111111 .
b110101000010000000000011111111 4
b110101000010000000000011111111 5
b110101000010000000000011111111 N
b1000 3
b10000100000 Z
b10000100000 r
b10000100000 t
b100100 W
b100100 n
b100100 p
b100100 s
b100000 -
b100000 <
b100000 [
b100000 o
b100000 z
1)
#95
0)
#100
b0 A
b0 F
b0 I
b0 M
b0 ]
b0 c
b0 g
b0 '"
1:
0?
b10 E
b10 H
b10 K
b110000010 L
b1 V
b1 }
b1 ""
b1 (
b1 /
b1 2
b1 @
b1 \
b1 b
b1 {
b1 ^
b1 j
b1 R
b1 `
b1 d
b1 h
b1 +"
b10110000010000000 T
b10110000010000000 k
b10110000010000000 q
b1011 P
b1011 #"
b1011 ."
b101100000100000 U
b101100000100000 l
b101100000100000 ("
b101100000100000 *"
b1 _
b1 f
b101000 Y
b101000 x
b101000 y
b0 C
b0 J
b100000 B
b100000 G
b101101010010110000010000000 w
b1011 ~
b1010 !"
b1010 ,"
b1011 -"
b101100000100000 &"
b0 S
b0 a
b0 e
b0 i
b0 %"
b1 &
b1 +
b1 1
b1 8
b1 Q
b1 $"
b1 )"
b101000 X
b101000 u
b101000 v
b1011010100101100000100000 .
b1011010100101100000100000 4
b1011010100101100000100000 5
b1011010100101100000100000 N
b1001 3
b10110000010101000 Z
b10110000010101000 r
b10110000010101000 t
b101000 W
b101000 n
b101000 p
b101000 s
b100100 -
b100100 <
b100100 [
b100100 o
b100100 z
1)
#105
0)
#110
b10 A
b10 F
b10 I
b10 M
b10 ]
b10 c
b10 g
b10 '"
b11111111111111110111111100000010 V
b11111111111111110111111100000010 }
b11111111111111110111111100000010 ""
b1000000011111111 R
b1000000011111111 `
b1000000011111111 d
b1000000011111111 h
b1000000011111111 +"
b10000000010001000 T
b10000000010001000 k
b10000000010001000 q
b11111111111111110111111100000010 (
b11111111111111110111111100000010 /
b11111111111111110111111100000010 2
b11111111111111110111111100000010 @
b11111111111111110111111100000010 \
b11111111111111110111111100000010 b
b11111111111111110111111100000010 {
b1000000011111111 &
b1000000011111111 +
b1000000011111111 1
b1000000011111111 8
b1000000011111111 Q
b1000000011111111 $"
b1000000011111111 )"
b1000 P
b1000 #"
b1000 ."
b100000000100010 U
b100000000100010 l
b100000000100010 ("
b100000000100010 *"
b11111111111111110111111100000010 _
b11111111111111110111111100000010 f
b101100 Y
b101100 x
b101100 y
b100010 B
b100010 G
b101001000010000000010001000 w
b1010 ~
b1000 !"
b1000 ,"
b1000 -"
b100000000100010 &"
b1 S
b1 a
b1 e
b1 i
b1 %"
b101100 X
b101100 u
b101100 v
b1010010000100000000100010 .
b1010010000100000000100010 4
b1010010000100000000100010 5
b1010010000100000000100010 N
b1010 3
b10000000010110100 Z
b10000000010110100 r
b10000000010110100 t
b101100 W
b101100 n
b101100 p
b101100 s
b101000 -
b101000 <
b101000 [
b101000 o
b101000 z
1)
#115
0)
#120
09
0:
1?
1'
b0 E
b0 H
b0 K
b1010000 L
b0 A
b0 F
b0 I
b0 M
b0 ]
b0 c
b0 g
b0 '"
b1010011 V
b1010011 }
b1010011 ""
b1010011 (
b1010011 /
b1010011 2
b1010011 @
b1010011 \
b1010011 b
b1010011 {
b101001000 T
b101001000 k
b101001000 q
b1010011 _
b1010011 f
b1000 P
b1000 #"
b1000 ."
b1010010 U
b1010010 l
b1010010 ("
b1010010 *"
b1010010 R
b1010010 `
b1010010 d
b1010010 h
b1010010 +"
b110000 Y
b110000 x
b110000 y
b101011 C
b101011 J
b10010 B
b10010 G
b101101000000000000101001000 w
b1011 ~
b0 -"
b1010010 &"
b11111111111111110111111100000010 &
b11111111111111110111111100000010 +
b11111111111111110111111100000010 1
b11111111111111110111111100000010 8
b11111111111111110111111100000010 Q
b11111111111111110111111100000010 $"
b11111111111111110111111100000010 )"
b110000 X
b110000 u
b110000 v
b10101101011010000000000001010010 .
b10101101011010000000000001010010 4
b10101101011010000000000001010010 5
b10101101011010000000000001010010 N
b1011 3
b101111000 Z
b101111000 r
b101111000 t
b110000 W
b110000 n
b110000 p
b110000 s
b101100 -
b101100 <
b101100 [
b101100 o
b101100 z
1)
#125
